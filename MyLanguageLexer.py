# Generated from MyLanguage.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,19,142,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,
        0,1,1,1,1,1,2,1,2,1,3,4,3,47,8,3,11,3,12,3,48,1,3,1,3,1,4,1,4,1,
        5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,3,6,64,8,6,1,7,1,7,1,8,1,8,1,8,
        1,8,1,8,3,8,73,8,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,84,8,
        9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,4,
        15,98,8,15,11,15,12,15,99,1,15,1,15,1,15,4,15,105,8,15,11,15,12,
        15,106,1,15,3,15,110,8,15,1,16,4,16,113,8,16,11,16,12,16,114,1,16,
        1,16,4,16,119,8,16,11,16,12,16,120,3,16,123,8,16,1,17,1,17,5,17,
        127,8,17,10,17,12,17,130,9,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
        1,18,1,18,3,18,141,8,18,0,0,19,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,
        8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,
        19,1,0,5,3,0,9,10,13,13,32,32,1,0,46,46,1,0,48,57,3,0,65,90,95,95,
        97,122,4,0,48,57,65,90,95,95,97,122,159,0,1,1,0,0,0,0,3,1,0,0,0,
        0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
        15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,
        25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,
        35,1,0,0,0,0,37,1,0,0,0,1,39,1,0,0,0,3,41,1,0,0,0,5,43,1,0,0,0,7,
        46,1,0,0,0,9,52,1,0,0,0,11,54,1,0,0,0,13,63,1,0,0,0,15,65,1,0,0,
        0,17,72,1,0,0,0,19,83,1,0,0,0,21,85,1,0,0,0,23,87,1,0,0,0,25,89,
        1,0,0,0,27,91,1,0,0,0,29,93,1,0,0,0,31,109,1,0,0,0,33,112,1,0,0,
        0,35,124,1,0,0,0,37,140,1,0,0,0,39,40,5,61,0,0,40,2,1,0,0,0,41,42,
        5,40,0,0,42,4,1,0,0,0,43,44,5,41,0,0,44,6,1,0,0,0,45,47,7,0,0,0,
        46,45,1,0,0,0,47,48,1,0,0,0,48,46,1,0,0,0,48,49,1,0,0,0,49,50,1,
        0,0,0,50,51,6,3,0,0,51,8,1,0,0,0,52,53,3,11,5,0,53,10,1,0,0,0,54,
        55,5,91,0,0,55,56,3,17,8,0,56,57,3,13,6,0,57,12,1,0,0,0,58,59,5,
        44,0,0,59,60,3,17,8,0,60,61,3,13,6,0,61,64,1,0,0,0,62,64,3,15,7,
        0,63,58,1,0,0,0,63,62,1,0,0,0,64,14,1,0,0,0,65,66,5,93,0,0,66,16,
        1,0,0,0,67,73,3,31,15,0,68,73,3,33,16,0,69,73,3,35,17,0,70,73,3,
        37,18,0,71,73,3,9,4,0,72,67,1,0,0,0,72,68,1,0,0,0,72,69,1,0,0,0,
        72,70,1,0,0,0,72,71,1,0,0,0,73,18,1,0,0,0,74,84,5,61,0,0,75,76,5,
        43,0,0,76,84,5,61,0,0,77,78,5,45,0,0,78,84,5,61,0,0,79,80,5,42,0,
        0,80,84,5,61,0,0,81,82,5,47,0,0,82,84,5,61,0,0,83,74,1,0,0,0,83,
        75,1,0,0,0,83,77,1,0,0,0,83,79,1,0,0,0,83,81,1,0,0,0,84,20,1,0,0,
        0,85,86,5,43,0,0,86,22,1,0,0,0,87,88,5,45,0,0,88,24,1,0,0,0,89,90,
        5,42,0,0,90,26,1,0,0,0,91,92,5,47,0,0,92,28,1,0,0,0,93,94,5,37,0,
        0,94,30,1,0,0,0,95,97,5,34,0,0,96,98,7,1,0,0,97,96,1,0,0,0,98,99,
        1,0,0,0,99,97,1,0,0,0,99,100,1,0,0,0,100,101,1,0,0,0,101,110,5,34,
        0,0,102,104,5,39,0,0,103,105,7,1,0,0,104,103,1,0,0,0,105,106,1,0,
        0,0,106,104,1,0,0,0,106,107,1,0,0,0,107,108,1,0,0,0,108,110,5,39,
        0,0,109,95,1,0,0,0,109,102,1,0,0,0,110,32,1,0,0,0,111,113,7,2,0,
        0,112,111,1,0,0,0,113,114,1,0,0,0,114,112,1,0,0,0,114,115,1,0,0,
        0,115,122,1,0,0,0,116,118,5,46,0,0,117,119,7,2,0,0,118,117,1,0,0,
        0,119,120,1,0,0,0,120,118,1,0,0,0,120,121,1,0,0,0,121,123,1,0,0,
        0,122,116,1,0,0,0,122,123,1,0,0,0,123,34,1,0,0,0,124,128,7,3,0,0,
        125,127,7,4,0,0,126,125,1,0,0,0,127,130,1,0,0,0,128,126,1,0,0,0,
        128,129,1,0,0,0,129,36,1,0,0,0,130,128,1,0,0,0,131,132,5,84,0,0,
        132,133,5,114,0,0,133,134,5,117,0,0,134,141,5,101,0,0,135,136,5,
        70,0,0,136,137,5,97,0,0,137,138,5,108,0,0,138,139,5,115,0,0,139,
        141,5,101,0,0,140,131,1,0,0,0,140,135,1,0,0,0,141,38,1,0,0,0,13,
        0,48,63,72,83,99,106,109,114,120,122,128,140,1,6,0,0
    ]

class MyLanguageLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    WS = 4
    ARRAY = 5
    ARRAY_BEGIN = 6
    CONTINUE_ARRAY = 7
    END_ARRAY = 8
    LITERAL = 9
    ASSIGNMENT_OPERATOR = 10
    PLUS = 11
    MINUS = 12
    TIMES = 13
    DIVIDE = 14
    MOD = 15
    STRING = 16
    NUMBER = 17
    IDENTIFIER = 18
    BOOL = 19

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'('", "')'", "']'", "'+'", "'-'", "'*'", "'/'", "'%'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "ARRAY", "ARRAY_BEGIN", "CONTINUE_ARRAY", "END_ARRAY", 
            "LITERAL", "ASSIGNMENT_OPERATOR", "PLUS", "MINUS", "TIMES", 
            "DIVIDE", "MOD", "STRING", "NUMBER", "IDENTIFIER", "BOOL" ]

    ruleNames = [ "T__0", "T__1", "T__2", "WS", "ARRAY", "ARRAY_BEGIN", 
                  "CONTINUE_ARRAY", "END_ARRAY", "LITERAL", "ASSIGNMENT_OPERATOR", 
                  "PLUS", "MINUS", "TIMES", "DIVIDE", "MOD", "STRING", "NUMBER", 
                  "IDENTIFIER", "BOOL" ]

    grammarFileName = "MyLanguage.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


