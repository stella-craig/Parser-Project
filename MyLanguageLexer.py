# Generated from MyLanguage.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,18,146,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,1,0,1,0,1,1,1,1,
        1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        3,4,58,8,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,3,
        5,73,8,5,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,3,7,86,8,7,
        1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,
        5,13,102,8,13,10,13,12,13,105,9,13,1,13,1,13,1,14,4,14,110,8,14,
        11,14,12,14,111,1,14,1,14,4,14,116,8,14,11,14,12,14,117,3,14,120,
        8,14,1,15,1,15,5,15,124,8,15,10,15,12,15,127,9,15,1,16,1,16,1,16,
        1,16,1,16,1,16,1,16,1,16,1,16,3,16,138,8,16,1,17,4,17,141,8,17,11,
        17,12,17,142,1,17,1,17,0,0,18,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
        17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,1,0,6,
        2,0,34,34,92,92,4,0,10,10,13,13,34,34,92,92,1,0,48,57,3,0,65,90,
        95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,162,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,1,37,1,0,0,0,3,39,1,0,0,0,5,41,
        1,0,0,0,7,43,1,0,0,0,9,57,1,0,0,0,11,72,1,0,0,0,13,74,1,0,0,0,15,
        85,1,0,0,0,17,87,1,0,0,0,19,89,1,0,0,0,21,91,1,0,0,0,23,93,1,0,0,
        0,25,95,1,0,0,0,27,97,1,0,0,0,29,109,1,0,0,0,31,121,1,0,0,0,33,137,
        1,0,0,0,35,140,1,0,0,0,37,38,5,61,0,0,38,2,1,0,0,0,39,40,5,40,0,
        0,40,4,1,0,0,0,41,42,5,41,0,0,42,6,1,0,0,0,43,44,3,9,4,0,44,8,1,
        0,0,0,45,46,5,91,0,0,46,47,3,29,14,0,47,48,3,11,5,0,48,58,1,0,0,
        0,49,50,5,91,0,0,50,51,3,31,15,0,51,52,3,11,5,0,52,58,1,0,0,0,53,
        54,5,91,0,0,54,55,3,27,13,0,55,56,3,11,5,0,56,58,1,0,0,0,57,45,1,
        0,0,0,57,49,1,0,0,0,57,53,1,0,0,0,58,10,1,0,0,0,59,60,5,44,0,0,60,
        61,3,29,14,0,61,62,3,11,5,0,62,73,1,0,0,0,63,64,5,44,0,0,64,65,3,
        31,15,0,65,66,3,11,5,0,66,73,1,0,0,0,67,68,5,44,0,0,68,69,3,27,13,
        0,69,70,3,11,5,0,70,73,1,0,0,0,71,73,3,13,6,0,72,59,1,0,0,0,72,63,
        1,0,0,0,72,67,1,0,0,0,72,71,1,0,0,0,73,12,1,0,0,0,74,75,5,93,0,0,
        75,14,1,0,0,0,76,86,5,61,0,0,77,78,5,43,0,0,78,86,5,61,0,0,79,80,
        5,45,0,0,80,86,5,61,0,0,81,82,5,42,0,0,82,86,5,61,0,0,83,84,5,47,
        0,0,84,86,5,61,0,0,85,76,1,0,0,0,85,77,1,0,0,0,85,79,1,0,0,0,85,
        81,1,0,0,0,85,83,1,0,0,0,86,16,1,0,0,0,87,88,5,43,0,0,88,18,1,0,
        0,0,89,90,5,45,0,0,90,20,1,0,0,0,91,92,5,42,0,0,92,22,1,0,0,0,93,
        94,5,47,0,0,94,24,1,0,0,0,95,96,5,37,0,0,96,26,1,0,0,0,97,103,5,
        34,0,0,98,99,5,92,0,0,99,102,7,0,0,0,100,102,8,1,0,0,101,98,1,0,
        0,0,101,100,1,0,0,0,102,105,1,0,0,0,103,101,1,0,0,0,103,104,1,0,
        0,0,104,106,1,0,0,0,105,103,1,0,0,0,106,107,5,34,0,0,107,28,1,0,
        0,0,108,110,7,2,0,0,109,108,1,0,0,0,110,111,1,0,0,0,111,109,1,0,
        0,0,111,112,1,0,0,0,112,119,1,0,0,0,113,115,5,46,0,0,114,116,7,2,
        0,0,115,114,1,0,0,0,116,117,1,0,0,0,117,115,1,0,0,0,117,118,1,0,
        0,0,118,120,1,0,0,0,119,113,1,0,0,0,119,120,1,0,0,0,120,30,1,0,0,
        0,121,125,7,3,0,0,122,124,7,4,0,0,123,122,1,0,0,0,124,127,1,0,0,
        0,125,123,1,0,0,0,125,126,1,0,0,0,126,32,1,0,0,0,127,125,1,0,0,0,
        128,129,5,84,0,0,129,130,5,114,0,0,130,131,5,117,0,0,131,138,5,101,
        0,0,132,133,5,70,0,0,133,134,5,97,0,0,134,135,5,108,0,0,135,136,
        5,115,0,0,136,138,5,101,0,0,137,128,1,0,0,0,137,132,1,0,0,0,138,
        34,1,0,0,0,139,141,7,5,0,0,140,139,1,0,0,0,141,142,1,0,0,0,142,140,
        1,0,0,0,142,143,1,0,0,0,143,144,1,0,0,0,144,145,6,17,0,0,145,36,
        1,0,0,0,12,0,57,72,85,101,103,111,117,119,125,137,142,1,6,0,0
    ]

class MyLanguageLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    ARRAY = 4
    ARRAY_BEGIN = 5
    CONTINUE_ARRAY = 6
    END_ARRAY = 7
    ASSIGNMENT_OPERATOR = 8
    PLUS = 9
    MINUS = 10
    TIMES = 11
    DIVIDE = 12
    MOD = 13
    STRING = 14
    NUMBER = 15
    IDENTIFIER = 16
    BOOL = 17
    WS = 18

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'('", "')'", "']'", "'+'", "'-'", "'*'", "'/'", "'%'" ]

    symbolicNames = [ "<INVALID>",
            "ARRAY", "ARRAY_BEGIN", "CONTINUE_ARRAY", "END_ARRAY", "ASSIGNMENT_OPERATOR", 
            "PLUS", "MINUS", "TIMES", "DIVIDE", "MOD", "STRING", "NUMBER", 
            "IDENTIFIER", "BOOL", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "ARRAY", "ARRAY_BEGIN", "CONTINUE_ARRAY", 
                  "END_ARRAY", "ASSIGNMENT_OPERATOR", "PLUS", "MINUS", "TIMES", 
                  "DIVIDE", "MOD", "STRING", "NUMBER", "IDENTIFIER", "BOOL", 
                  "WS" ]

    grammarFileName = "MyLanguage.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


